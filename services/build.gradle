apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 28
        consumerProguardFiles 'proguard.txt'
    }

    lintOptions {
        xmlReport false
        warningsAsErrors true
        quiet false
        showAll true
        disable 'OldTargetApi'
    }
}

dependencies {
    api 'cz.msebera.android:httpclient:4.5.8'
    compileOnly 'org.conscrypt:conscrypt-android:2.4.0'

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation project(path: ':android-async-http')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}
project.afterEvaluate { project ->

    android.libraryVariants.all { variant ->
        def name = variant.buildType.name
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompileProvider.get()
        task.from variant.javaCompileProvider.get().destinationDir
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: tasks.findAll { task -> task.name.contains('Javadoc') }) {
        archiveClassifier = 'javadoc'
        from 'build/docs/javadoc/release/'
    }

    publishing {
        publications {
            maven(MavenPublication) {
//                artifactId = POM_ARTIFACT_ID
                artifact javadocJar
                artifact sourcesJar
                artifact jarRelease

            }
        }
        repositories {
            maven {
                def releaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl
                credentials {
                    def NexusUsername = project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ''
                    def NexusPassword = project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ''
                    username NexusUsername
                    password NexusPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.maven
    }
}

